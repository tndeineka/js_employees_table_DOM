{"version":3,"sources":["scripts/main.js"],"names":["COLUMNS","NAME","POSITION","OFFICE","AGE","SALARY","formatNumber","number","toString","replace","formatSalary","salary","parseInt","slice","capitalize","string","charAt","toUpperCase","body","document","tableEL","querySelector","tbody","headers","querySelectorAll","forEach","header","columnIndex","addEventListener","sortTable","selectTableRow","editTableData","isDescOrder","currentSortField","setSortOrder","newSortField","column","rows","Array","from","sort","a","b","aValue","cells","textContent","bValue","order","localeCompare","innerHTML","row","appendChild","selectedRow","e","tableRow","target","closest","contains","classList","remove","add","formFields","name","type","tagName","options","createFormField","field","fieldName","formField","createElement","formFieldContent","setAttribute","option","newOptionElement","value","formElement","formFieldElement","submitButton","createNewEmployee","formData","Object","entries","key","tableData","data","addNewEmployee","preventDefault","form","fromEntries","FormData","errors","getErrors","length","newEmployee","reset","pushNotification","index","title","description","position","office","age","push","posTop","posRight","messageElement","className","style","cssText","titleElement","descriptionElement","setTimeout","removeChild","getInputErrors","includes","getInputType","isNumber","Number","isNaN","saveChanges","prevValue","valueToChange","newValue","startsWith","newSalary","onBlur","cellIndex","onKeyPress","changeToInput","input","inputType","focus","once","targetItem","tableBody","currentTarget"],"mappings":"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","file":"main.95336130.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst COLUMNS = {\n  NAME: 0,\n  POSITION: 1,\n  OFFICE: 2,\n  AGE: 3,\n  SALARY: 4,\n};\n\nfunction formatNumber(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst formatSalary = (salary) => {\n  return parseInt(salary.slice(1).replace(/,/g, ''));\n};\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst body = document.body;\nconst tableEL = document.querySelector('table');\nconst tbody = tableEL.querySelector('tbody');\nconst headers = tableEL.querySelectorAll('thead th');\n\nheaders.forEach((header, columnIndex) => {\n  header.addEventListener('click', () => {\n    sortTable(columnIndex);\n  });\n});\n\ntableEL.addEventListener('click', selectTableRow);\ntableEL.addEventListener('dblclick', editTableData);\n\n// Sort\nlet isDescOrder = false;\nlet currentSortField = null;\n\nfunction setSortOrder(newSortField) {\n  if (currentSortField !== null && currentSortField === newSortField) {\n    isDescOrder = !isDescOrder;\n  } else {\n    isDescOrder = false;\n    currentSortField = newSortField;\n  }\n}\n\nfunction sortTable(column) {\n  setSortOrder(column);\n\n  const rows = Array.from(tbody.rows);\n\n  rows.sort((a, b) => {\n    const aValue = a.cells[column].textContent;\n    const bValue = b.cells[column].textContent;\n\n    const order = isDescOrder ? -1 : 1;\n\n    switch (column) {\n      case COLUMNS.AGE:\n        return order * (parseInt(aValue) - parseInt(bValue));\n\n      case COLUMNS.SALARY:\n        return order * (formatSalary(aValue) - formatSalary(bValue));\n\n      default:\n        return order * aValue.localeCompare(bValue);\n    }\n  });\n\n  tbody.innerHTML = '';\n\n  rows.forEach(row => {\n    tbody.appendChild(row);\n  });\n}\n\n// Select table row\nlet selectedRow = null;\n\nfunction selectTableRow(e) {\n  const tableRow = e.target.closest('tr');\n\n  if (!tableRow || !tbody.contains(tableRow)) {\n    return;\n  }\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  tableRow.classList.add('active');\n  selectedRow = tableRow;\n}\n\n// Create form\nconst formFields = [\n  {\n    name: 'name',\n    type: 'text',\n    tagName: 'input',\n  },\n  {\n    name: 'position',\n    type: 'text',\n    tagName: 'input',\n  },\n  {\n    name: 'office',\n    tagName: 'select',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  {\n    name: 'age',\n    type: 'number',\n    tagName: 'input',\n  },\n  {\n    name: 'salary',\n    type: 'number',\n    tagName: 'input',\n  },\n];\n\nfunction createFormField(field) {\n  const { name: fieldName, type, tagName, options } = field;\n  const formField = document.createElement('label');\n\n  formField.textContent = capitalize(fieldName) + ':';\n\n  const formFieldContent = document.createElement(tagName);\n\n  formFieldContent.setAttribute('data-qa', fieldName);\n  formFieldContent.setAttribute('name', fieldName);\n\n  if (field.tagName === 'input') {\n    formFieldContent.type = type;\n  } else {\n    for (const option of options) {\n      const newOptionElement = document.createElement('option');\n\n      newOptionElement.value = option;\n      newOptionElement.textContent = option;\n\n      formFieldContent.appendChild(newOptionElement);\n    }\n  }\n\n  formField.appendChild(formFieldContent);\n\n  return formField;\n}\n\nconst formElement = document.createElement('form');\n\nformElement.classList.add('new-employee-form');\n\nfor (const field of formFields) {\n  const formFieldElement = createFormField(field);\n\n  formElement.appendChild(formFieldElement);\n}\n\nconst submitButton = document.createElement('button');\n\nsubmitButton.textContent = 'Save to table';\nsubmitButton.type = 'submit';\n\nformElement.appendChild(submitButton);\n\nbody.appendChild(formElement);\n\n// Handle form submit\nfunction createNewEmployee(formData) {\n  const tableRow = document.createElement('tr');\n\n  for (const [key, value] of Object.entries(formData)) {\n    const tableData = document.createElement('td');\n\n    let data = value;\n\n    if (key === 'salary') {\n      data = '$' + formatNumber(data);\n    }\n\n    tableData.textContent = data;\n\n    tableRow.appendChild(tableData);\n  }\n\n  return tableRow;\n}\n\nfunction addNewEmployee(e) {\n  e.preventDefault();\n\n  const form = e.target;\n  const formData = Object.fromEntries(new FormData(form));\n\n  const errors = getErrors(formData);\n\n  if (!errors.length) {\n    const newEmployee = createNewEmployee(formData);\n\n    tbody.appendChild(newEmployee);\n    form.reset();\n\n    pushNotification(10, 10, 'Success', 'New employee was created', 'success');\n\n    return;\n  }\n\n  for (const [index, { title, description }] of errors.entries()) {\n    pushNotification(10 + (index * 130), 10, title, description, 'error');\n  }\n}\n\nformElement.addEventListener('submit', (e) => addNewEmployee(e));\n\n// Validate form\nfunction getErrors(formData) {\n  const { name: fieldName, position, office, age, salary } = formData;\n  const errors = [];\n\n  if (!fieldName || !position || !office || !age || !salary) {\n    errors.push({\n      title: 'All fields are required',\n      description: 'Please fill all fields',\n    });\n\n    return errors;\n  }\n\n  if (fieldName.length < 4) {\n    errors.push({\n      title: 'Name is too short',\n      description: 'Name has to be at least 4 characters',\n    });\n  }\n\n  if (age < 18 || age > 90) {\n    errors.push({\n      title: 'Wrong age',\n      description: 'Age has to be between 18 and 90 years old',\n    });\n  }\n\n  return errors;\n}\n\n// Create notifications\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const messageElement = document.createElement('div');\n\n  messageElement.className = `notification ${type}`;\n  messageElement.style.cssText = `top: ${posTop}px; right: ${posRight}px`;\n  messageElement.setAttribute('data-qa', 'notification');\n\n  const titleElement = document.createElement('h2');\n\n  titleElement.classList.add('title');\n  titleElement.textContent = title;\n\n  const descriptionElement = document.createElement('p');\n\n  descriptionElement.textContent = description;\n\n  messageElement.appendChild(titleElement);\n  messageElement.appendChild(descriptionElement);\n\n  document.body.appendChild(messageElement);\n\n  setTimeout(() => {\n    document.body.removeChild(messageElement);\n  }, 2000);\n}\n\n// Edit table\nfunction getInputErrors(value, columnIndex) {\n  const errors = [];\n\n  switch (columnIndex) {\n    case COLUMNS.NAME:\n      if (value.length < 4) {\n        errors.push({\n          title: 'Name is too short',\n          description: 'Name has to be at least 4 characters',\n        });\n      }\n      break;\n\n    case COLUMNS.AGE:\n      if (value < 18 || value > 90) {\n        errors.push({\n          title: 'Wrong age',\n          description: 'Age has to be between 18 and 90 years old',\n        });\n      }\n      break;\n\n    case COLUMNS.OFFICE:\n      if (!formFields[COLUMNS.OFFICE].options.includes(value)) {\n        errors.push({\n          title: 'Wrong city',\n          description: 'Office should be in one of the cities from the list',\n        });\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return errors;\n}\n\nconst getInputType = (data) => {\n  const isNumber = !Number.isNaN(formatSalary(data)) || !Number.isNaN(+data);\n\n  return isNumber ? 'number' : 'text';\n};\n\nconst saveChanges = (tableData, prevValue, valueToChange) => {\n  const newValue = valueToChange || prevValue;\n\n  if (prevValue.startsWith('$')) {\n    const newSalary = formatNumber(+newValue);\n\n    if (isNaN(newSalary.slice(1))) {\n      tableData.textContent = prevValue;\n\n      return;\n    }\n\n    tableData.textContent = '$' + formatNumber(+newValue);\n\n    return;\n  }\n\n  tableData.textContent = newValue;\n};\n\nconst onBlur = (e, tableData, prevValue) => {\n  const newValue = e.target.value;\n  const columnIndex = tableData.cellIndex;\n\n  const errors = getInputErrors(newValue, columnIndex);\n\n  if (!errors.length || newValue === '') {\n    saveChanges(tableData, prevValue, newValue);\n\n    return;\n  }\n\n  for (const [index, { title, description }] of errors.entries()) {\n    pushNotification(10 + (index * 130), 10, title, description, 'error');\n  }\n\n  tableData.textContent = prevValue;\n};\n\nconst onKeyPress = (tableData, prevValue) => {\n  tableData.addEventListener(\n    'keydown',\n    (e) => {\n      if (e.key === 'Enter') {\n        onBlur(e, tableData, prevValue);\n      }\n\n      if (e.key === 'Escape') {\n        tableData.textContent = prevValue;\n      }\n    },\n  );\n};\n\nconst changeToInput = (tableData) => {\n  const value = tableData.textContent;\n\n  const input = document.createElement('input');\n  const inputType = getInputType(value);\n\n  input.classList.add('cell-input');\n  input.type = inputType;\n\n  if (value.startsWith('$')) {\n    input.value = formatSalary(value);\n  } else {\n    input.value = value;\n  }\n\n  tableData.innerHTML = '';\n\n  tableData.appendChild(input);\n  input.focus();\n\n  input.addEventListener(\n    'blur',\n    (e) => onBlur(e, tableData, value),\n    { once: true }\n  );\n};\n\nfunction editTableData(e) {\n  e.preventDefault();\n\n  const targetItem = e.target;\n  const table = e.currentTarget;\n  const tableBody = table.querySelector('tbody');\n\n  const tableData = targetItem.closest('td');\n\n  if (!tableData || !tableBody.contains(tableData)) {\n    return;\n  }\n\n  const prevValue = tableData.textContent;\n\n  const dataInput = tableData.querySelector('.cell-input');\n\n  if (!dataInput) {\n    changeToInput(tableData);\n  }\n\n  onKeyPress(tableData, prevValue);\n}\n"]}